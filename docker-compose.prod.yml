---
# Production overrides for docker-compose.yml
# Usage: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
# Note: When using deploy.replicas, container_name from base config is ignored
#
# Additional environment variables for production:
# - UID/GID: User/Group ID for container processes (default: 1000)
# - Memory limits: <SERVICE>_MEMORY_LIMIT (e.g., DASHBOARD_MEMORY_LIMIT)
# - Database credentials: RABBITMQ_USER, POSTGRES_USER, NEO4J_USER, etc.

services:
  rabbitmq:
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    # No resource limits per project convention

  postgres:
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    # No resource limits per project convention

  neo4j:
    restart: always
    environment:
      NEO4J_AUTH: ${NEO4J_USER}/${NEO4J_PASSWORD}
      NEO4J_dbms_memory_heap_max__size: ${NEO4J_HEAP_SIZE:-2G}
    # No resource limits per project convention

  extractor:
    restart: always
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3

  graphinator:
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3

  tableinator:
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3

  dashboard:
    restart: always
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
