---
name: cleanup

on:
  schedule:
    - cron: '0 0 15 * *'

env:
  IMAGE_NAME: ${{ github.actor }}/discogsography

jobs:
  list-sub-projects:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository.
        uses: actions/checkout@v4

      - name: Get all sub-projects.
        id: set-matrix
        run: echo "matrix=$(ls -d */ | sed -r 's/\///g' | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  cleanup-discogsography:
    needs: list-sub-projects

    runs-on: ubuntu-latest

    strategy:
      matrix:
        sub-project: ${{ fromJson(needs.list-sub-projects.outputs.matrix) }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Delete Docker images older than a month.
        id: cleanup-images
        uses: snok/container-retention-policy@b56f4ff7539c1f94f01e5dc726671cd619aa8072 # v2
        with:
          account-type: personal
          cut-off: One month ago UTC
          keep-at-least: 4
          skip-tags: latest
          image-names: ${{ env.IMAGE_NAME }}/${{ matrix.sub-project }}
          token: ${{ secrets.GHCR_TOKEN }}

      - name: Send notification to Discord.
        uses: sarisia/actions-status-discord@82409b29f4bd859ae6d4b6b6ab8d7f7b9c4d7b66 # v1.12.0
        if: always()
        with:
          title: discogsography/${{ matrix.sub-project }}
          description: |
            succeded cleanup : ${{ steps.cleanup-images.outputs.deleted }}
            failed cleanup   : ${{ steps.cleanup-images.outputs.failed }}
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
