---
name: Playwright Tests

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "dashboard/**"
      - "tests/dashboard/**"
      - ".github/workflows/playwright-test.yml"
      - "common/**"
      - "pyproject.toml"
      - "uv.lock"
  pull_request:
    branches:
      - main
    paths:
      - "dashboard/**"
      - "tests/dashboard/**"
      - ".github/workflows/playwright-test.yml"
      - "common/**"
      - "pyproject.toml"
      - "uv.lock"

env:
  CI: true
  PLAYWRIGHT_BROWSERS_PATH: "0"  # Use default location
  PYTHON_VERSION: "3.13"

jobs:
  playwright-test:
    name: Test Playwright
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@bd01e18f51369d5a26f1651c3cb451d3417e3bba # v6.3.1
        with:
          version: latest
          enable-cache: true
          cache-dependency-glob: "**/uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Cache pytest
        uses: actions/cache@v4
        with:
          path: .pytest_cache
          key: ${{ runner.os }}-pytest-playwright-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-pytest-playwright-
            ${{ runner.os }}-pytest-

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
          key: ${{ runner.os }}-playwright-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-

      - name: Install dependencies
        run: |
          uv sync --all-extras --frozen
          # Install workspace packages
          uv pip install -e dashboard
          uv pip install -e common

      - name: Install Playwright browsers
        run: |
          # Set Playwright to run in CI mode
          export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0
          uv run playwright install chromium
          # Install system dependencies for headless Chrome
          uv run playwright install-deps chromium

      - name: Run dashboard E2E tests
        run: |
          # Run the E2E test script which handles server startup
          ./scripts/test-e2e.sh
