---
# This workflow runs all E2E tests including desktop browsers and mobile device emulation.
# It can be called from other workflows or triggered directly on dashboard changes.
name: E2E Test

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - "dashboard/**"
      - "tests/dashboard/**"
      - ".github/workflows/e2e-test.yml"
      - "common/**"
      - "pyproject.toml"
      - "uv.lock"
  pull_request:
    branches:
      - main
    paths:
      - "dashboard/**"
      - "tests/dashboard/**"
      - ".github/workflows/e2e-test.yml"
      - "common/**"
      - "pyproject.toml"
      - "uv.lock"

concurrency:
  group: e2e-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CI: true
  PLAYWRIGHT_BROWSERS_PATH: "0"  # Use default location
  PYTHON_VERSION: "3.13"

permissions:
  contents: read

jobs:
  e2e-test:
    name: Test ${{ matrix.browser }} ${{ matrix.device && format('- {0}', matrix.device) || '' }}

    runs-on: ${{ matrix.os }}
    timeout-minutes: 20

    strategy:
      fail-fast: false
      matrix:
        include:
          # Desktop browsers
          - os: ubuntu-latest
            browser: chromium
            browser-install: chromium

          - os: ubuntu-latest
            browser: firefox
            browser-install: firefox

          - os: macos-latest
            browser: webkit
            browser-install: webkit

          # Mobile Safari on iPhone
          - os: macos-latest
            browser: webkit
            browser-install: webkit
            device: "iPhone 15"

          # Mobile Safari on iPad
          - os: macos-latest
            browser: webkit
            browser-install: webkit
            device: "iPad Pro 11"

    steps:
      - name: üîÄ Checkout repository
        uses: actions/checkout@v4

      - name: üì¶ Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v6.4.3
        with:
          version: latest
          enable-cache: true
          cache-dependency-glob: "**/uv.lock"

      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Combined Python dependencies cache (uv + venv)
      - name: üíæ Cache Python dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-${{ hashFiles('**/uv.lock', '**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-python-${{ env.PYTHON_VERSION }}-
            ${{ runner.os }}-python-

      # Test cache (pytest + playwright results)
      - name: üß™ Cache test results
        uses: actions/cache@v4
        with:
          path: |
            .pytest_cache
            test-results
          key: ${{ runner.os }}-test-e2e-${{ matrix.browser }}-${{ matrix.device || 'desktop' }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-test-e2e-${{ matrix.browser }}-${{ matrix.device || 'desktop' }}-
            ${{ runner.os }}-test-e2e-${{ matrix.browser }}-
            ${{ runner.os }}-test-e2e-
            ${{ runner.os }}-test-

      # Browser cache (Playwright)
      - name: üåê Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/ms-playwright
            ~/Library/Caches/ms-playwright
          key: ${{ runner.os }}-playwright-browsers-${{ matrix.browser }}-v${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-playwright-browsers-${{ matrix.browser }}-
            ${{ runner.os }}-playwright-browsers-

      - name: üì¶ Install dependencies
        run: |
          uv sync --all-extras --frozen
          # Install workspace packages
          uv pip install -e dashboard
          uv pip install -e common

      - name: üé≠ Install Playwright browsers
        run: |
          # Set Playwright to run in CI mode
          export PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=0
          uv run playwright install ${{ matrix.browser-install }}
          # Install system dependencies
          uv run playwright install-deps ${{ matrix.browser-install }}

      - name: üß™ Run dashboard E2E tests (Desktop)
        if: matrix.device == null
        run: |
          # Run E2E tests - server is started automatically by pytest fixture
          uv run pytest tests/dashboard/test_dashboard_ui.py -v -m e2e \
            --browser ${{ matrix.browser }}

      - name: üì± Run dashboard E2E tests (Mobile)
        if: matrix.device != null
        run: |
          # Run E2E tests with device emulation
          uv run pytest tests/dashboard/test_dashboard_ui.py -v -m e2e \
            --browser ${{ matrix.browser }} \
            --device "${{ matrix.device }}"

      - name: üì§ Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-results-${{ matrix.os }}-${{ matrix.browser }}-${{ matrix.device || 'desktop' }}
          path: test-results/
          retention-days: 7

      - name: üé• Upload test videos
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-${{ matrix.os }}-${{ matrix.browser }}-${{ matrix.device || 'desktop' }}
          path: test-results/**/*.webm
          retention-days: 7
