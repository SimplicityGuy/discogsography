[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "discogsography-graphinator"
version = "0.1.0"
description = "Discogs data Neo4j graph service"
requires-python = ">=3.13"
dependencies = [
    "aio-pika>=9.0.0",
    "neo4j>=5.15.0",
    "orjson>=3.9.0",
]

[project.scripts]
graphinator = "graphinator:main"

[tool.black]
line-length = 100
target-version = ['py313']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''
# Ensure spaces are used instead of tabs
skip-string-normalization = false

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff.lint.isort]
lines-after-imports = 2
combine-as-imports = true
split-on-trailing-comma = true
known-first-party = ["config"]

[tool.ruff]
line-length = 100
target-version = "py313"

[tool.ruff.lint]
select = [
    "ARG", # flake8-unused-arguments
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "PTH", # flake8-use-pathlib
    "RUF", # ruff-specific rules
    "S",   # bandit security rules
    "SIM", # flake8-simplify
    "T20", # flake8-print (no print statements)
    "TCH", # flake8-type-checking
    "UP",  # pyupgrade
    "W",   # pycodestyle warnings
    "W191", # indentation contains tabs (explicit tab detection)
]
fixable = ["ALL"]
unfixable = []
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "E501",  # line too long, handled by black
    "S101",  # use of assert detected (allow assert statements)
    "T201",  # print found (allow print statements for ASCII art)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"graphinator.py" = ["T201"]  # Allow print statements for ASCII art

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
mypy_path = ".."

# Ignore missing imports for third-party libraries without stubs
[[tool.mypy.overrides]]
module = [
    "aio_pika.*",
    "neo4j.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [".venv", "tests", "venv"]
skips = ["B101"]  # Skip assert_used test

[tool.setuptools.packages.find]
include = ["graphinator*"]
